name: Build

on:
  workflow_call:
    inputs:
      ref:
        description: 'The git reference to build'
        required: true
        type: string
    secrets:
      FLUTTER_GOOGLE_SERVICES:
        description: 'Base64 encoded Google Services credentials JSON'
        required: true
      FLUTTER_GOOGLE_CLIENT_ID:
        description: 'Google Client ID for Flutter'
        required: true
      KEYSTORE_BASE64:
        description: 'Base64 encoded keystore file'
        required: true
      KEYSTORE_PASSWORD:
        description: 'Password for the keystore'
        required: true
      KEY_PASSWORD:
        description: 'Password for the key in the keystore'
        required: true
      KEY_ALIAS:
        description: 'Alias for the key in the keystore'
        required: true

jobs:
    build:
        name: Build & Release
        # runs-on: ubuntu-latest
        runs-on: macos-latest
        steps:
            - uses: actions/checkout@v4
              with:
                ref: ${{ inputs.ref }}
            - name: Set Up Java
              uses: actions/setup-java@v4
              with:
                java-version: '17'
                distribution: 'temurin'
            - name: Set up Flutter
              uses: subosito/flutter-action@v2
              with:
                flutter-version: 3.29.0
                channel: stable
            - name: Install dependencies
              run: flutter pub get
              working-directory: ./playfit-mobile/playfit
            - name: Decode Google Services credentials
              run: echo "${{ secrets.FLUTTER_GOOGLE_SERVICES }}" | base64 --decode > google-services.json
              working-directory: ./playfit-mobile/playfit/android/app
            - name: Set up environment variables
              run: |
                echo "SERVER_BASE_URL=http://${{ vars.FLUTTER_SERVER_IP }}:${{ vars.FLUTTER_SERVER_PORT }}" >> $GITHUB_ENV
                echo "SERVER_BASE_WS_URL=ws://${{ vars.FLUTTER_SERVER_IP }}:${{ vars.FLUTTER_SERVER_PORT }}" >> $GITHUB_ENV
                echo "GOOGLE_CLIENT_ID=${{ secrets.FLUTTER_GOOGLE_CLIENT_ID }}" >> $GITHUB_ENV
              working-directory: ./playfit-mobile/playfit
            - name: Decode Keystore
              run: |
                echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > ./playfit-mobile/playfit/android/app/keystore.jks
            - name: Create key.properties
              run: |
                echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > ./playfit-mobile/playfit/android/key.properties
                echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> ./playfit-mobile/playfit/android/key.properties
                echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> ./playfit-mobile/playfit/android/key.properties
                echo "storeFile=keystore.jks" >> ./playfit-mobile/playfit/android/key.properties
            - name: Build APK
              run: flutter build apk --release
              working-directory: ./playfit-mobile/playfit
            - name: Build IPA
              run: flutter build ipa --no-codesign
              working-directory: ./playfit-mobile/playfit
            - name: Compress Archives and IPAs
              run: |
                cd build
                tar -czf ios_build.tar.gz ios
              working-directory: ./playfit-mobile/playfit
            - name: Upload Artifacts
              uses: actions/upload-artifact@v4
              with:
                name: Releases
                path: |
                  ./playfit-mobile/playfit/build/app/outputs/flutter-apk/app-release.apk
                  ./playfit-mobile/playfit/build/app/outputs/bundle/release/app-release.aab
                  ./playfit-mobile/playfit/build/ios_build.tar.gz
            - name: Extract version from pubspec.yaml
              id: extract_version
              run: |
                version=$(grep '^version: ' ./playfit-mobile/playfit/pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
                echo "version=$version" >> $GITHUB_ENV
            - name: Check if Tag Exists
              id: check_tag
              run: |
                if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
                  echo "TAG_EXISTS=true" >> $GITHUB_ENV
                else
                  echo "TAG_EXISTS=false" >> $GITHUB_ENV
                fi
            - name: Modify Tag
              if: env.TAG_EXISTS == 'true'
              id: modify_tag
              run: |
                new_version="${{ env.VERSION }}-build-${{ github.run_number }}"
                echo "VERSION=$new_version" >> $GITHUB_ENV
            - name: Create Release
              uses: ncipollo/release-action@v1
              with:
                artifacts: "./playfit-mobile/playfit/build/app/outputs/flutter-apk/app-release.apk,./playfit-mobile/playfit/build/app/outputs/bundle/release/app-release.aab,./playfit-mobile/playfit/build/ios_build.tar.gz"
                tag: "v${{ env.VERSION }}"
                token: ${{ secrets.GITHUB_TOKEN }}
